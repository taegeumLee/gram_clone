// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  phoneNumber String   @unique
  gender      String
  birthDate   DateTime
  location    String
  height      Int
  education   String?
  job         String?
  religion    String?
  drinking    String?
  smoking     String?

  // 상태 관련 필드
  isActive   Boolean  @default(false)
  isVerified Boolean  @default(false)
  lastActive DateTime @default(now())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // 관계
  userPhotos    UserPhoto[]
  userInterests UserInterest[]
  userFeatures  UserFeature[]
  preference    Preference?    @relation(fields: [preferenceId], references: [id])
  preferenceId  String?
}

model UserPhoto {
  id     String @id @default(uuid())
  userId String
  url    String
  order  Int
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, order])
  @@map("user_photos")
}

model UserInterest {
  id         String   @id @default(cuid())
  userId     String
  interest   Interest @relation(fields: [interestId], references: [id])
  interestId String
  User       User     @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([interestId])
}

model UserFeature {
  id        String  @id @default(cuid())
  userId    String
  feature   Feature @relation(fields: [featureId], references: [id])
  featureId String
  User      User    @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([featureId])
}

model Interest {
  id           String         @id @default(cuid())
  name         String
  userInterest UserInterest[]

  @@map("interests")
}

model Feature {
  id          String        @id @default(cuid())
  name        String
  userFeature UserFeature[]

  @@map("features")
}

model Preference {
  id             String @id @default(uuid())
  gender         String
  ageRangeMin    Int
  ageRangeMax    Int
  location       String
  distance       Int
  heightRangeMin Int
  heightRangeMax Int
  religion       String
  drinking       String
  smoking        String

  users User[]

  @@map("preferences")
}
