// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  phoneNumber String   @unique
  gender      String
  birthDate   DateTime
  location    String
  height      Int
  education   String?
  job         String?
  religion    String?
  drinking    String?
  smoking     String?

  // 관계 정의
  photos       Photo[]
  interests    Interest[]
  features     Feature[]
  preferences  Preference @relation(fields: [preferenceId], references: [id], onDelete: Cascade)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  isActive     Boolean    @default(true)
  isVerified   Boolean    @default(false)
  lastActive   DateTime   @default(now())
  preferenceId String

  @@map("users")
}

model Photo {
  id        String   @id @default(uuid())
  url       String
  order     Int
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([userId, order])
  @@map("photos")
}

model Interest {
  id        String   @id @default(uuid())
  name      String
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([userId, name])
  @@map("interests")
}

model Feature {
  id        String   @id @default(uuid())
  name      String
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())

  @@unique([userId, name])
  @@map("features")
}

model Preference {
  id             String @id @default(uuid())
  gender         String
  ageRangeMin    Int
  ageRangeMax    Int
  location       String
  distance       Int
  heightRangeMin Int
  heightRangeMax Int
  religion       String
  drinking       String
  smoking        String
  user           User[]

  @@map("user_preferences")
}
